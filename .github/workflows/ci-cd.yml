name: CI & CD

on:
  push:
    branches:
      - master
    tags:
      - "v*.*.*"
  pull_request:
    branches:
      - master

env:
  SOLUTION_PATH: "src/StackNucleus.sln"
  NUGET_DIRR: "nupkg"
  NUGET_SRC_URL: "https://api.nuget.org/v3/index.json"

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies
        run: dotnet restore ${{ env.SOLUTION_PATH }}

      - name: Build
        run: dotnet build ${{ env.SOLUTION_PATH }} --no-restore --configuration Release

      - name: Test
        run: dotnet test ${{ env.SOLUTION_PATH }} --no-build --configuration Release --collect:"XPlat Code Coverage"

      # - name: Publish code coverage (optional)
      #   if: success() && github.event_name != 'pull_request'
      #   uses: codecov/codecov-action@v3
      #   with:
      #     files: "**/coverage.cobertura.xml"
      #     fail_ci_if_error: true

  publish:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies
        run: dotnet restore ${{ env.SOLUTION_PATH }}

      - name: Build
        run: dotnet build ${{ env.SOLUTION_PATH }} --no-restore --configuration Release

      - name: Check .NET and NuGet versions
        run: |
          dotnet --version
          dotnet nuget --version

      - name: Build and pack
        run: dotnet pack ${{ env.SOLUTION_PATH }} --no-restore --configuration Release -o ./${{ env.NUGET_DIRR }}

      - name: Publish to NuGet.org
        run: dotnet nuget push ./${{ env.NUGET_DIRR }}/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source ${{ env.NUGET_SRC_URL }} --skip-duplicate
